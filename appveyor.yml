version: 0.0.0-ci-{build}
image: Ubuntu

pull_requests:
    do_not_increment_build_number: true
        
environment:
    NODEJS_VERSION: 12.16.3
    SONARCLOUD_AUTH_TOKEN:
        secure: WSZCNtuf3h9M4BxNiFQ7SQPwGkg3+LqSMZRyfYruiicYvc1BzYaN90n8pNEsPAKs
    DOCKER_HUB_ACCT: jeffwinn
    DOCKER_HUB_REPO: plex-transcoder
    DOCKER_HUB_AUTH_TOKEN:
        secure: Va78zuCPdE+yXdoAAcIhmF1nSP1IINHadv1boECCVAE82rzOQci8pN+sZrv+FYZz
    
stack: node $NODEJS_VERSION, docker

install:
    - npm install
    - npm install -g sonarqube-scanner

before_build:
    - ps: |
        $IMAGE_TAG = $env:APPVEYOR_BUILD_VERSION
        if ($env:APPVEYOR_REPO_BRANCH -eq 'master') {
            # Remove the CI build tag from the production release builds.
            $IMAGE_TAG = $env:APPVEYOR_BUILD_VERSION.substring(0, $env:APPVEYOR_BUILD_VERSION.indexof('-'))
        }

    - ps: |
        $SONAR_BRANCH_NAME = $env:APPVEYOR_REPO_BRANCH
        if ($env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH -ne '') {
            $SONAR_BRANCH_NAME = $env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH
        }
    
    - echo $APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH
    - echo $APPVEYOR_REPO_BRANCH
    - echo $IMAGE_TAG
    - echo $SONAR_BRANCH_NAME
    
build_script:
    - npm run build-prod

test_script:
    - npm run test
    - sonar-scanner -Dsonar.login="$SONARCLOUD_AUTH_TOKEN" -Dsonar.branch.name="$SONAR_BRANCH_NAME" -Dsonar.projectVersion="$IMAGE_TAG"
    
artifacts:
    - path: 'build'
      name: 'src'

    - path: 'test_results/coverage'
      name: 'test coverage'

    - path: 'test_results/jest-junit.xml'
      name: 'test results'

deploy_script:
    - ps: |
        $deploy = ($env:APPVEYOR_REPO_BRANCH -eq 'master' -or $env:APPVEYOR_REPO_BRANCH -eq 'develop')
        if (-not $deploy) {
            return
        }

        docker login --username="$env:DOCKER_HUB_ACCT" --password="$env:DOCKER_HUB_AUTH_TOKEN"        
                
        docker build -t "${env:DOCKER_HUB_ACCT}/${env:DOCKER_HUB_REPO}:${IMAGE_TAG}" .
        sudo docker push "${env:DOCKER_HUB_ACCT}/${env:DOCKER_HUB_REPO}:${IMAGE_TAG}"

on_success:
    - ps: |
        $wc = New-Object 'System.Net.WebClient'
        $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path ./test_results/jest-junit.xml))